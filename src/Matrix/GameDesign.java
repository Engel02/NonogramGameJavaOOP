/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Matrix;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.GridLayout;
import java.io.*;
import java.util.Locale;


/**
 *
 * @author Angelius
 */
public class GameDesign extends javax.swing.JFrame {

      public JButton buttons;
      int statusMatrix;
      int game, lives;
            
      
    /**
     * Creates new form GameDesign
     */
    
    Matrix myMatrix;;
               
    public GameDesign() {
        
       // int desicion = JOptionPane.showConfirmDialog(null, "Matrix easy?");
            

            Container contentPane;
            initComponents();
            
            
            
            playNewGame();

            int x, y, z, m;
            x = 15;
            y = 15;
            myMatrix = new Matrix(x, y);

            setTitle(" Nonogram ");
            //setSize(1300, 850);
            setResizable(false);
            //setLocation(200, 200);

            //Color newColor = new Color(255,211,51);

            contentPane = getContentPane();
            contentPane.setLayout(null);  

             ActionListener accion = new ActionListener(){
                @Override
                public void actionPerformed(ActionEvent e){

                    JButton push;

                    push = (JButton) e.getSource();
                    int state = push.getIconTextGap();

                    if (state == 0) {

                        push.setBackground(Color.black);
                        push.setIconTextGap(1);

                    } else if(state == 1){

                        //push.setBackground(Color.red);
                        push.setBackground(Color.white);
                        push.setText("x");
                        push.setForeground(Color.red);
                        push.setIconTextGap(2);

                    } else if (state == 2) {
                        
                        push.setText("");
                        push.setIconTextGap(0);
                    }
                }

            };


             jPanel1.setLayout(new GridLayout(x,y));
            for(m=0; m<x; m++)
                for(z=0; z < y; z++){

                    buttons = myMatrix.bMatrix[m][z];
                    //buttons.addActionListener(this);
                    jPanel1.add(buttons);
                    buttons.addActionListener(accion);
                }
            setDefaultCloseOperation(EXIT_ON_CLOSE);

            statusMatrix = 15;
            

        
    }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        checkButtonAction = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        numberOfLivesLeftTextField = new javax.swing.JTextField();
        HorizontalNumbers = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        Row1 = new javax.swing.JLabel();
        Row2 = new javax.swing.JLabel();
        Row3 = new javax.swing.JLabel();
        Row4 = new javax.swing.JLabel();
        Row5 = new javax.swing.JLabel();
        Row6 = new javax.swing.JLabel();
        Row7 = new javax.swing.JLabel();
        Row8 = new javax.swing.JLabel();
        Row9 = new javax.swing.JLabel();
        Row10 = new javax.swing.JLabel();
        Row11 = new javax.swing.JLabel();
        Row12 = new javax.swing.JLabel();
        Row13 = new javax.swing.JLabel();
        Row14 = new javax.swing.JLabel();
        Row15 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        playNewGameOption = new javax.swing.JMenuItem();
        loadGameOption = new javax.swing.JMenuItem();
        restartGameOption = new javax.swing.JMenuItem();
        saveFileOption = new javax.swing.JCheckBoxMenuItem();
        quitOption = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1569, 1000));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setAlignmentX(500.0F);
        jPanel1.setAlignmentY(180.0F);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        checkButtonAction.setBackground(new java.awt.Color(255, 0, 51));
        checkButtonAction.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkButtonAction.setText("Check");
        checkButtonAction.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        checkButtonAction.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        checkButtonAction.setDefaultCapable(false);
        checkButtonAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("Lives left:");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        numberOfLivesLeftTextField.setEditable(false);
        numberOfLivesLeftTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberOfLivesLeftTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfLivesLeftTextFieldActionPerformed(evt);
            }
        });

        HorizontalNumbers.setEditable(false);
        HorizontalNumbers.setColumns(20);
        HorizontalNumbers.setRows(3);
        HorizontalNumbers.setText(" \n                1                                                             1                       1\n                2                                   4           7           4          1           4                       4                       8          1\n    4          3         13                      2           1           1          3           1           7          2                       3          6          4\n    4          2          1          13         2           1           2          3           2           1          1         13          2          2          4");
        HorizontalNumbers.setAutoscrolls(false);
        HorizontalNumbers.setBorder(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(200, 196));

        Row1.setText("2 2 2 1");

        Row2.setText("2 2 1 1 2 1");

        Row3.setText("4 1 1 2 1");

        Row4.setText("5 5 ");

        Row5.setText("2 5");

        Row6.setText("7");

        Row7.setText("1 1 5");

        Row8.setText("11");

        Row9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Row9.setText("12");

        Row10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Row10.setText("13");

        Row11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Row11.setText("8 5");

        Row12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Row12.setText("1 3 5");

        Row13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Row13.setText("5 5");

        Row14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Row14.setText("3 6");

        Row15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Row15.setText("6");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Row1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Row2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Row3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Row4, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Row5, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Row6, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Row7, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Row8, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Row14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Row15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Row9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Row10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Row11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Row12, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))
                    .addComponent(Row13, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(Row1)
                .addGap(24, 24, 24)
                .addComponent(Row2)
                .addGap(24, 24, 24)
                .addComponent(Row3)
                .addGap(24, 24, 24)
                .addComponent(Row4)
                .addGap(24, 24, 24)
                .addComponent(Row5)
                .addGap(23, 23, 23)
                .addComponent(Row6)
                .addGap(23, 23, 23)
                .addComponent(Row7)
                .addGap(23, 23, 23)
                .addComponent(Row8)
                .addGap(23, 23, 23)
                .addComponent(Row9)
                .addGap(23, 23, 23)
                .addComponent(Row10)
                .addGap(23, 23, 23)
                .addComponent(Row11)
                .addGap(23, 23, 23)
                .addComponent(Row12)
                .addGap(23, 23, 23)
                .addComponent(Row13)
                .addGap(23, 23, 23)
                .addComponent(Row14)
                .addGap(23, 23, 23)
                .addComponent(Row15)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        playNewGameOption.setText("Play New Game");
        playNewGameOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playNewGameOptionActionPerformed(evt);
            }
        });
        jMenu1.add(playNewGameOption);

        loadGameOption.setText("Load Game");
        loadGameOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadGameOptionActionPerformed(evt);
            }
        });
        jMenu1.add(loadGameOption);

        restartGameOption.setText("Restart Game");
        restartGameOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartGameOptionActionPerformed(evt);
            }
        });
        jMenu1.add(restartGameOption);

        saveFileOption.setText("Save Contents");
        saveFileOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileOptionActionPerformed(evt);
            }
        });
        jMenu1.add(saveFileOption);

        quitOption.setText("Quit");
        quitOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitOptionActionPerformed(evt);
            }
        });
        jMenu1.add(quitOption);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numberOfLivesLeftTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(checkButtonAction, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 284, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HorizontalNumbers, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(169, 169, 169))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(HorizontalNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numberOfLivesLeftTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(448, 448, 448)
                        .addComponent(checkButtonAction, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE))
                .addGap(2, 2, 2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveFileOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileOptionActionPerformed
        saveToFile();
    }//GEN-LAST:event_saveFileOptionActionPerformed

    private void quitOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitOptionActionPerformed
        quit();
    }//GEN-LAST:event_quitOptionActionPerformed

    private void loadGameOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadGameOptionActionPerformed
        readFromFile();
    }//GEN-LAST:event_loadGameOptionActionPerformed

    private void checkButtonActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionActionPerformed
        
        checkWin();
    }//GEN-LAST:event_checkButtonActionActionPerformed

    private void restartGameOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartGameOptionActionPerformed
        
        restartGame();
        
    }//GEN-LAST:event_restartGameOptionActionPerformed

    private void playNewGameOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playNewGameOptionActionPerformed
        restartGame();
        playNewGame();
        
    }//GEN-LAST:event_playNewGameOptionActionPerformed

    private void numberOfLivesLeftTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfLivesLeftTextFieldActionPerformed
        
        
        
    }//GEN-LAST:event_numberOfLivesLeftTextFieldActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    private void quit() {
        int desicion = JOptionPane.showConfirmDialog(null, "¿Do you want to save changes?");
        
        if (desicion == JOptionPane.YES_OPTION){
            saveToFile();
        }else if (desicion == JOptionPane.NO_OPTION){
            System.exit(0);
        }
    }
    
    public void checkWin() {
        int itwo, j, currentState, winningState;
        int[] winningGame = new int[255];

        if (game == 2) {
            int [] temp = {1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0,0,1,1,0,1,1,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1};
            winningGame=temp;
        } else if (game == 1) {
            int [] temp = {1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,1,0,0,1,1,0,1,1,1,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,0,1,0,1,0,0,1,1,1,1,0,1,0,1,1,0,0,0,1,0,0,1,1,1,0,0,1,1,1,0,0,0,0,1,0,0,1,1,1,1,0,1,0,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0};
            winningGame=temp;
        }

        boolean win = true;
        for (int i=0;i<225;i++) {
            itwo = i % 15;
            j = i/15;
            currentState = myMatrix.bMatrix[itwo][j].getIconTextGap();
            winningState = winningGame[i];
            if (currentState == 2)
                currentState = 0;
            
            if(currentState != winningState) {
                win = false;
                break;
            }
        }
        if (win) {

            JOptionPane.showMessageDialog(null, "You Won!!!");
        } else{
            if (--lives > 0) {
                numberOfLivesLeftTextField.setText(Integer.toString(lives));
                JOptionPane.showMessageDialog(null, "Incorrect you have " + lives + " lives left");
            } else {
                numberOfLivesLeftTextField.setText(Integer.toString(lives));
                String[] options = {"Restart","New game", "Quit"};
                int result = JOptionPane.showOptionDialog(null, "You ran out of lives, you lost. Would you like to try again or try another level?", "You lost! :(", 0, JOptionPane.INFORMATION_MESSAGE, null, options, EXIT_ON_CLOSE);
                switch (result) {
                    case 0:
                        restartGame();
                        break;
                    case 1:
                        restartGame();
                        playNewGame();
                        break;
                    default:
                        quit();
                        break;
                }
            }
        }
    }
    
    private void playNewGame(){
        String[] options = {"Bear","Moose"};
        int result = JOptionPane.showOptionDialog(null, "Select level", "Select game", 0, JOptionPane.QUESTION_MESSAGE, null, options, EXIT_ON_CLOSE);
        lives = 3;
        numberOfLivesLeftTextField.setText(Integer.toString(lives));
        if (JOptionPane.YES_OPTION == result) { //Bear
            game = 1;
            HorizontalNumbers.setText(" \n                1                                                             1                       1\n                2                                   4           7           4          1           4                       4                       8          1\n    4          3         13                      2           1           1          3           1           7          2                       3          6          4\n    4          2          1          13         2           1           2          3           2           1          1         13          2          2          4");
            
            Row1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row1.setText("3 3 ");

            Row2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row2.setText("1 1 5 1 1");

            Row3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row3.setText("1 4 4 1");

            Row4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row4.setText("6 6");

            Row5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);            
            Row5.setText("13");

            Row6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row6.setText("12");
            
            Row7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row7.setText("3 5 3");
            
            Row8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row8.setText("6 6");

            Row9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row9.setText("5 2 2");

            Row10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row10.setText("1 2 3 2 1");

            Row11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row11.setText("1 2 1 2 1");

            Row12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row12.setText("1 2 3 2 1");

            Row13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row13.setText("3 2 2 1 1");

            Row14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row14.setText("1 2 3");

            Row15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row15.setText("4 3");
        
        } else if (JOptionPane.NO_OPTION == result) { // Moose
            game = 2;
            HorizontalNumbers.setText("               \n\n                            2                                                 3                                     2\n                3          2          4           5           2           1                        2           6                                     4          1          4\n    2          3          2          6           7           7           4           7           4           2          12         15        10          9          8");
            
            Row1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row1.setText("2 2 2 1");

            Row2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row2.setText("2 2 1 1 2 1");

            Row3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row3.setText("4 1 1 2 1");

            Row4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row4.setText("5 5 ");

            Row5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row5.setText("2 5");

            Row6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row6.setText("7");

            Row7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row7.setText("1 1 5");

            Row8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row8.setText("11");

            Row9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row9.setText("12");

            Row10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row10.setText("13");

            Row11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row11.setText("8 5");

            Row12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row12.setText("1 3 5");

            Row13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row13.setText("5 5");

            Row14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row14.setText("3 6");

            Row15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            Row15.setText("6");
        }
        
    }
    
    private void restartGame(){
        
        int itwo, j;
        lives = 3;
        numberOfLivesLeftTextField.setText(Integer.toString(lives));
        for (int i=0;i<225;i++) {
            itwo = i % 15;
            j = i/15;
            JButton button = myMatrix.bMatrix[itwo][j];
            button.setIconTextGap(0);
            button.setText("");
            button.setBackground(Color.WHITE);
        }
        
      
    }
    
    private void saveToFile(){
        File outFile;
        FileOutputStream outFileStream;
        PrintWriter outStream;
        FileDialog fd;
        String doc, path, filename;
        
        try{
            fd = new FileDialog(this, "Choose a file to save the content to the array", FileDialog.SAVE);
            fd.setVisible(true);
            path = fd.getDirectory();
            filename = fd.getFile();
            if((path == null) || (filename == null))return;

            doc = path + filename;
            System.out.println("PATH = " + doc);
            outFile = new File(doc);
            outFileStream = new FileOutputStream(outFile);
            outStream = new PrintWriter(outFileStream);
            System.out.println("Lives at save method: " + lives);
            outStream.println(lives);
            outStream.print(myMatrix.saveContents());
            outStream.close();
        }catch(IOException e){
        
            JOptionPane.showMessageDialog(null, "Error in opening a file: \n"  + e.getMessage() );
            
        }
    }
        
    private void readFromFile(){
        File inFile;
        FileReader fr;
        BufferedReader bufReader;
        FileDialog fd;
        String line, doc, path, filename;
        
        try{
            fd = new FileDialog(this, "Choose a file to open", FileDialog.LOAD);
            fd.setVisible(true);
            path = fd.getDirectory();
            filename = fd.getFile();
            if((path == null) || (filename == null))return;

            doc = path + filename;
            System.out.println("PATH = " + doc);
            inFile = new File(doc);
            fr = new FileReader(inFile);
            bufReader = new BufferedReader(fr);
            line = bufReader.readLine();
            
            lives = Integer.parseInt(line);
            numberOfLivesLeftTextField.setText(Integer.toString(lives));
            line = bufReader.readLine();
            
            int state, itwo, j;
            JButton mButton;
         
            for (int i=0;i<225;i++) {
                itwo = i % 15;
                j = i/15;
                mButton = myMatrix.bMatrix[itwo][j];
                state = Integer.parseInt(line);
                mButton.setIconTextGap(state);
                switch (state) {
                    case 1:
                        mButton.setBackground(Color.black);
                        mButton.setText("");
                        break;
                    case 2:
                        mButton.setBackground(Color.white);
                        mButton.setText("x");
                        mButton.setAlignmentY(0);
                        mButton.setForeground(Color.red);
                        break;
                    case 0:
                        mButton.setBackground(Color.white);
                        mButton.setText("");
                        break;
                    default:
                        break;
                }
                line = bufReader.readLine();
            }
            bufReader.close();
        } catch(IOException e){
        
            JOptionPane.showMessageDialog(null, "Error in opening a file: "  + e.getMessage() );                 
        }
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
      
         
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameDesign.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameDesign().setVisible(true);
            }
        });
       
    }   
     
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea HorizontalNumbers;
    private javax.swing.JLabel Row1;
    private javax.swing.JLabel Row10;
    private javax.swing.JLabel Row11;
    private javax.swing.JLabel Row12;
    private javax.swing.JLabel Row13;
    private javax.swing.JLabel Row14;
    private javax.swing.JLabel Row15;
    private javax.swing.JLabel Row2;
    private javax.swing.JLabel Row3;
    private javax.swing.JLabel Row4;
    private javax.swing.JLabel Row5;
    private javax.swing.JLabel Row6;
    private javax.swing.JLabel Row7;
    private javax.swing.JLabel Row8;
    private javax.swing.JLabel Row9;
    private javax.swing.JButton checkButtonAction;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JMenuItem loadGameOption;
    private javax.swing.JTextField numberOfLivesLeftTextField;
    private javax.swing.JMenuItem playNewGameOption;
    private javax.swing.JCheckBoxMenuItem quitOption;
    private javax.swing.JMenuItem restartGameOption;
    private javax.swing.JCheckBoxMenuItem saveFileOption;
    // End of variables declaration//GEN-END:variables
}
